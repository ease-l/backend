# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Uber API
  description: Move your app forward with the Uber API
  version: "1.0.0"
# the domain of the service
host: api.uber.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:


  
  /Comment:
    get:
      summary: All comments
      description: Returns all comments
      responses: 
        200: 
          description: Array of comments
          schema:
            type: array
            items:
              $ref: '#/definitions/CommentWithoutObjectId'
            
  /Comment/GetById:
    get:
      summary: One comment
      description: Gets comment by id
      parameters:
        - name: id
          in: query
          required: true
          type: string
          description: Comment id
      responses: 
        200: 
          description: Comment
          schema:
            $ref: '#/definitions/CommentWithoutObjectId'
          
  /Comment/AddComment:
    post:
      summary: Posted
      description: Adds comment to comment
      parameters:
        - name: text
          in: query
          required: true
          type: string
          description: Comment text
        - name: name
          in: query
          required: true
          type: string
          description:  Comment name
      responses: 
        200: 
          description: Comment added successfully
          schema:
            type: string
            #items:
              #$ref: '#/definitions/Comment'
            
   ############
  
  /Image:
    get:
      summary: All images
      description: Returns all images
      responses: 
        200: 
          description: Array of images
          schema: 
            type: array
            items:
              $ref: '#/definitions/ImageWithoutObjectId'
            
  /Image/GetById:
    get:
      summary: One image
      description: Gets image by id
      parameters:
        - name: id
          required: true
          in: query
          type: string
          description: Image id
      responses: 
        200: 
          description: Image
          schema:
            $ref: '#/definitions/ImageWithoutObjectId'
             
  /Image/AddImage:
    post:
      summary: Posted
      description: Adds image
      parameters:
        - name: name
          in: query
          required: true
          type: string
          description: Image name
        - name: url
          in: query
          required: true
          type: string
          description: Image Url
      responses: 
        200: 
          description: Image added successfully
          schema:
            type: string
            #items:
              #$ref: '#/definitions/Image'
            
  /Image/AddCommentToImage:
    post:
      summary: Posted
      description: Adds comment to image
      parameters:
        - name: scommentId
          in: query
          required: true
          type: string
          description:  Comment id
        - name: simageId
          required: true
          in: query
          type: string
          description: Image id
      responses:
        200:
          description: Comment added to image successfully
          schema: 
            type: string
            #$ref: '#/definitions/Image'
            
   ############
            
  /Project:
    get:
      summary: All projects
      description: Returns all projects
      responses: 
        200: 
          description: Array of projects
          schema:
            type: array
            items:
              $ref: '#/definitions/ProjectWithoutObjectId'
            
  /Project/GetById:
    get:
      summary: One Project
      description: Gets project by id
      parameters:
        - name: id
          in: query
          required: true
          type: string
          description: Project id
      responses: 
        200: 
          description: Project
          schema:
            $ref: '#/definitions/ProjectWithoutObjectId'
  #fix method an go on         
  /Project/AddProject:
    post:
      summary: Posted
      description: Adds project to root library
      parameters:
        - name: name
          in: query
          required: true
          type: string
          description: Project name
      responses: 
        200: 
          description: Project added to root library successfully
          schema:
            type: string
            #$ref: '#/definitions/Comment'
  
  /Project/AddProjectToProject:
    post:
      summary: Posted
      description: Adds new project to root project
      parameters:
        - name: sidNew
          in: query
          required: true
          type: string
          description: New project id
        - name: sidRoot
          in: query
          required: true
          type: string
          description: Root project id
      responses: 
        200: 
          description: Project added to root project successfully
          schema:
            type: string
            #$ref: '#/definitions/Project'
            
  /Project/AddImageToProject:
    post:
      summary: Posted
      description: Adds image to project
      parameters:
        - name: simageId
          in: query
          required: true
          type: string
          description: Image id
        - name: sprojectId
          in: query
          required: true
          type: string
          description: Project id
      responses: 
        200: 
          description: Image added to project successfully
          schema:
            type: string
            #$ref: '#/definitions/Project'
  
  /Project/AddCommentToProject:
    post:
      summary: Posted
      description: Adds comment to project
      parameters:
        - name: scommentId
          in: query
          required: true
          type: string
          description: Comment id
        - name: sprojectId
          in: query
          required: true
          type: string
          description: Project id
      responses: 
        200: 
          description: Comment added to project successfully
          schema:
            type: string
            #$ref: '#/definitions/Project'
            
        
  ############
            
            
definitions:
  
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string

  BaseEntity:
    required:
      - Name
      - Author
      - Version
      - Id
      - CreationelData
    properties:
      Name: 
        type: string
      Author:
        type: string
      Version: 
        type: integer
        #format: uint
      Id:
        type: string
      CreationelData:
        type: string
      
  Comment:
    type: object
    description: Comment!
    allOf:
      - $ref: '#/definitions/BaseEntity' 
      - properties: 
          Text:
            type: string
            description: Comment content
  
  CommentWithoutObjectId:
    type: object
    description: CommentWithoutObkectId
    properties:
      Name: 
        type: string
      Author:
        type: string
      Version: 
        type: integer
        #format: uint
      Id:
        type: string
      CreationelData:
        type: string 
      Text:
        type: string
  
  Image:
    type: object
    description: Image!
    allOf:
      - $ref: '#/definitions/BaseEntity' 
      - properties: 
          Comments:
            type: array
            items:
                $ref: '#/definitions/Comment'
            description: List of comments
            
  ImageWithoutObjectId:
    type: object
    description: ImageWithoutObjectId
    properties:
      Name: 
        type: string
      Author:
        type: string
      Version: 
        type: integer
        #format: uint
      Id:
        type: string
      CreationelData:
        type: string 
      Comments:
            type: array
            items:
                $ref: '#/definitions/Comment'
            description: List of comments
  
  
  Project:
    type: object
    description: Project!
    allOf:
      - $ref: '#/definitions/BaseEntity'
      - properties: 
          Comments:
            type: array
            items:
              $ref: '#/definitions/Comment'
          Images:
            type: array
            items:
              $ref: '#/definitions/Image'
          Projects:
            type: array
            items:
              $ref: '#/definitions/Project'
              
  ProjectWithoutObjectId: 
    type: object
    description: ProjectWithoutObjectId
    properties:
      Name: 
        type: string
      Author:
        type: string
      Version: 
        type: integer
        #format: uint
      Id:
        type: string
      CreationelData:
        type: string 
      Comments:
        type: array
        items:
          $ref: '#/definitions/Comment'
      Images:
        type: array
        items:
          $ref: '#/definitions/Image'
      Projects:
        type: array
        items:
          $ref: '#/definitions/Project'